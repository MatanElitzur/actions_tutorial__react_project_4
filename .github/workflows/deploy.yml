name: Deployment
on:
  push:
    branches:
      - main
      - dev
env: #Adding environment variables for all jobs or a job will overide it in job level
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    # The test job will execute only on the main barnch, this is what is configured at the environment: testing
    environment: testing # for reperence to settings/environment and then we get the secrets from the environment and not from the general repository secrets
    runs-on: ubuntu-latest
    env: #We can add here the environment variables for the test job
      #MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017 #To run it on runs-on: ubuntu-latest when we not using container: tag and this address is used for connecting to the mongo container
      MONGODB_USERNAME: root
      #${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: example
      #${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    services: #services containers run in images(docker container) and not at runs-on, like ubuntu-latest
      mongodb:
        image: mongo #We can find it in docker hub https://hub.docker.com/_/mongo
        ports: #To run it on runs-on: ubuntu-latest when we not using container: tag
          - 27017:27017 #To run it on runs-on: ubuntu-latest, This is the port that is used by the container
        env: #The variables the images needs
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
      #matanservice: you can add more service containers
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server # requires MongoDB Atlas to accept requests from anywhere!
        run: npm start & npx wait-on http://127.0.0.1:$PORT #PORT is a job variable. we use $PORT in this way in ubuntu
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME" #we can use the MONGODB_USERNAME in this way
        #run: echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}" #we can use the MONGODB_USERNAME in this way
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME" #we can use the MONGODB_DB_NAME in this way
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
